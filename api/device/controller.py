"""
    Author: Do Quoc Vuong
    Email: vuongtlt13@gmail.com
    Country: VietNam
    Generated by VGenerator
    Created at: 2021-06-15 10:23:12.533379Z
"""

from typing import Dict
from flask import request
from api.core import BaseController, constants, utils
from api.device.repository import DeviceRepository


class DeviceController(BaseController):
    def __init__(self):
        super().__init__()
        self.device_repository = DeviceRepository()

    def get(self, _id=None):
        if _id is not None:
            device = self.device_repository.find_by_id(_id)
            if device:
                device = device.as_dict()
            return self.success(data=device)

        args = request.args.to_dict()
        page = int(args.get('page', constants.DEFAULT_PAGE))
        size = int(args.get('size', constants.DEFAULT_PAGE_SIZE))
        devices = self.device_repository.get(page=page, size=size)
        for index, device in enumerate(devices):
            devices[index] = device.as_dict()

        result = utils.paginate_serializer(page=page, size=size, data=devices, data_key_name='devices')
        return self.success(data=result)

    def create(self, data: Dict):
        new_device, errors = self.device_repository.create(data=data)
        if errors:
            return self.error(error=errors)

        return self.success(data=new_device.as_dict())

    def update(self, _id, data: Dict):

        device, errors = self.device_repository.update(_id, data=data)
        if errors:
            return self.error(error=errors)

        if device:
            device = device.as_dict()
        return self.success(data=device)

    def delete(self, _id):
        self.device_repository.delete(_id)
        return self.success(data=[])
